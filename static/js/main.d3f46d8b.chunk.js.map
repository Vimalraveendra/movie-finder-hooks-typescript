{"version":3,"sources":["components/Title/Title.tsx","components/MovieDisplay/MovieDisplay.tsx","components/MovieList/MovieList.tsx","containers/App.tsx","reportWebVitals.js","index.tsx"],"names":["Title","searchInput","handleChange","handleSubmit","className","type","placeholder","value","onChange","onClick","MovieDisplay","Poster","Year","src","alt","MovieList","moviesList","length","map","movie","imdbID","App","useState","setSearchInput","setMoviesList","error","setError","onHandleChange","e","currentTarget","onHandleSubmit","a","fetch","process","response","json","data","Response","Search","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAgBeA,EATe,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,YAAYC,EAA6B,EAA7BA,aAAaC,EAAgB,EAAhBA,aACrD,OACK,sBAAKC,UAAU,kBAAf,UACE,uBAAOC,KAAK,OAAQC,YAAY,iBAAiBC,MAAON,EAAaO,SAAUN,IAC/E,wBAAQO,QAASN,EAAjB,wBCaIO,G,MAhBM,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,OAAQX,EAAqB,EAArBA,MAAMY,EAAe,EAAfA,KAEjC,MACa,QAATD,EACA,sBAAKP,UAAU,kBAAf,UACC,qBAAKS,IAAKF,EAAQG,IAAKd,IACvB,6BAAKA,IACL,8BAAIY,EAAJ,UACM,OCUAG,G,MAnBG,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,WAChB,OACI,qBAAKZ,UAAU,sBAAf,SAEKY,EAAWC,OAAO,GAAID,EAAWE,KAAI,SAAAC,GAClC,OAAO,cAAC,EAAD,CAEPC,OAAQD,EAAMC,OACdT,OAAQQ,EAAMR,OACdX,MAAQmB,EAAMnB,MACdY,KAAOO,EAAMP,MAJRO,EAAMC,eCoDZC,EA9CJ,WAAK,IAAD,EAEsBC,mBAAiB,IAFvC,mBAENrB,EAFM,KAEMsB,EAFN,OAGoBD,mBAAyB,IAH7C,mBAGNN,EAHM,KAGKQ,EAHL,OAIWF,oBAAyB,GAJpC,mBAING,EAJM,KAIAC,EAJA,KAMPC,EAAgB,SAACC,GACpBL,EAAeK,EAAEC,cAActB,QAI3BuB,EAAc,uCAAE,8BAAAC,EAAA,sEACEC,MAAM,6BAAD,OAA8B/B,EAA9B,mBAzBhBgC,aAwBS,cACfC,EADe,gBAEFA,EAASC,OAFP,OAGD,WADdC,EAFe,QAGbC,UACPX,EAAS,IACTF,EAAcY,EAAKE,QACnBf,EAAe,MAGhBG,EAAS,mCACTH,EAAe,KAVM,2CAAF,qDActB,OAAGE,EAEA,sBAAKrB,UAAU,MAAf,UACC,8CACA,cAAC,EAAD,CAAOH,YAAaA,EAAaC,aAAcyB,EAAgBxB,aAAc2B,IAC7E,4BAAIL,OAML,sBAAKrB,UAAU,MAAf,UACC,8CACA,cAAC,EAAD,CAAOH,YAAaA,EAAaC,aAAcyB,EAAgBxB,aAAc2B,IAC7E,cAAC,EAAD,CAAWd,WAAYA,QC9CbuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3f46d8b.chunk.js","sourcesContent":["import \"./TItle.css\"\nexport interface Props {\n   searchInput:string,\n   handleChange :(e:React.SyntheticEvent<HTMLInputElement>)=>void,\n   handleSubmit:()=>void,\n  }\n\nconst Title:React.FC<Props> = ({searchInput,handleChange,handleSubmit})=>{\n    return(\n         <div className=\"title-container\">\n           <input type=\"text\"  placeholder=\"Find Movies...\" value={searchInput} onChange={handleChange}/>\n           <button onClick={handleSubmit}>Click </button>\n        </div>\n    )\n}\n\nexport default Title;","\nimport \"./MovieDisplay.css\";\nimport { IMovie } from \"../../containers/App\";\n\n\n\n\n\nconst MovieDisplay = ({Poster, Title,Year}:IMovie)=>{ \n    \n    return(\n       (Poster!=='N/A')?\n        <div className=\"movie-container\">\n         <img src={Poster} alt={Title} />\n         <h2>{Title}</h2>\n         <p>{Year} </p>\n        </div>:null\n    )\n    }  \n   \n      \n\n\n\nexport default MovieDisplay;        ","import MovieDisplay from \"../MovieDisplay/MovieDisplay\"\n\nimport \"./MovieList.css\"\n\nimport { IMovie } from \"../../containers/App\"\n\n\nconst MovieList = ({moviesList}:{moviesList:Array<IMovie>})=>{ \n    return(\n        <div className=\"movieList-container\">\n          {\n             moviesList.length>0&& moviesList.map(movie=>{\n                return <MovieDisplay \n                key={movie.imdbID}\n                imdbID={movie.imdbID}\n                Poster={movie.Poster}\n                Title ={movie.Title}\n                Year ={movie.Year}\n               \n               />\n            }) \n          }\n        </div>\n    )\n}\n\nexport default MovieList","import React,{useState} from 'react';\nimport './App.css';\n\nimport Title from '../components/Title/Title';\nimport MovieList from '../components/MovieList/MovieList';\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport interface IMovie{\n   imdbID:string,\n    Poster:string,\n    Title:string,\n    Year:string,  \n    Type?:string  \n       \n}\n\n\n\nconst App= ()=>{\n  \n  const [searchInput,setSearchInput]=useState<string>(\"\")\n  const [moviesList,setMoviesList]=useState <Array<IMovie>>([])\n  const [error,setError]= useState<boolean|string>(false)\n\n  const onHandleChange =(e:React.SyntheticEvent<HTMLInputElement>):void=>{\n     setSearchInput(e.currentTarget.value)\n }\n\n \n   const onHandleSubmit= async()=>{\n    const response = await fetch(`http://www.omdbapi.com/?s=${searchInput}&apikey=${API_KEY}`)\n    const data = await response.json()\n    if(data.Response !=='False'){\n     setError(\"\");\n     setMoviesList(data.Search);\n     setSearchInput(\"\");\n     \n    }else{\n    setError(\"Please enter a valid movie name\")\n    setSearchInput(\"\")\n     } \n   }\n  \n if(error){\n  return(\n    <div className=\"App\">\n     <h1>Movie Finder</h1>\n     <Title searchInput={searchInput} handleChange={onHandleChange} handleSubmit={onHandleSubmit}/>\n     <p>{error}</p>\n   </div>\n  )\n }\n\n  return(\n    <div className=\"App\">\n     <h1>Movie Finder</h1>\n     <Title searchInput={searchInput} handleChange={onHandleChange} handleSubmit={onHandleSubmit}/>\n     <MovieList moviesList={moviesList}/>\n   </div>\n  )\n }\n \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}